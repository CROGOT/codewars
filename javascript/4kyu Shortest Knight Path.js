//https://www.codewars.com/kata/549ee8b47111a81214000941/train/javascript
//ok !!!
function knight(start, finish) {
  const pole = Array(8).fill().map(v=>Array(8).fill(0)); //создаем двумерный массив с нолями
  
  const knightSteps=[[-2,-1],[-1,-2],[-2,1],[-1,2],[1,-2],[2,-1],[1,2],[2,1]]; //все шаги коня в виде массива смещений относительно текущей позиции

  let step=0, flag=true;  // step-очередной шаг коня, flag-флаг возможности очередного хода коня

  pole[+'abcdefgh'.indexOf(start[0])][+start[1]-1]=1; // (преобразуем в координаты массива) клетка начала = 1
  pole[+'abcdefgh'.indexOf(finish[0])][+finish[1]-1]=-1; //клетка финиша = -1

  while(flag){ // условие, что еще есть шаги
    flag=false; // предпологаем, что на следующем шаге нет хода
    step++;
    for (let x=0; x<8; x++) 
      for (let y=0; y<8; y++)
        if(pole[x][y]==step)  //нашли клетку откуда можно делать очередной шаг коня
          for(let [dx,dy] of knightSteps) // пробегаем по всем ходам коня из данной клетки
            if(x+dx>=0 && y+dy>=0 && x+dx<8 && y+dy<8){ // првоеряем, не уходит ли очередной шаг за край доски
              if(pole[x+dx][y+dy]==0){ //возможно сделать шаг (0 - это пустая клетка)
                pole[x+dx][y+dy]=step+1; // тогда увеличиваем шаг на 1 и присваиваем клетке, чтобы найти при следующей итерации
                flag=true; // сделали шаг, значит можно ходить (до следующей проверки)
              }
              if(pole[x+dx][y+dy]==-1) return step; // нашли финишную клетку, выходим из процедуры
            }
  }
  return false; // нет ответа
}

console.log(knight('h2', 'f6'));
/*

let arr = [['a1', 'c1', 2], ['a1', 'f1', 3], ['a1', 'f3', 3], ['a1', 'f4', 4], ['a1', 'f7', 5]];

*/